#   _
#  | |_ _ __ ___  _   ___  __
#  | __| '_ ` _ \| | | \ \/ /
#  | |_| | | | | | |_| |>  <
#   \__|_| |_| |_|\__,_/_/\_\

#~~~~~~~~~~~~~~~~
# basic settings
#~~~~~~~~~~~~~~~~
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",xterm-termite:Tc"

# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
bind C-a last-window

# Start numbering at 1
set -g base-index 1
setw -g pane-base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

set-window-option -g automatic-rename

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind -r a send-prefix

#~~~~~~~
# Style
#~~~~~~~
set-option -g status-style bg=colour8,fg=default

# default window title colors
set-window-option -g window-status-style fg=colour244,bg=default

# active window title colors
set-window-option -g window-status-current-style fg=colour3,bg=default

# pane border
set-option -g pane-border-style fg=colour235
set-option -g pane-active-border-style fg=colour240

# message text
set-option -g message-style bg=colour8,fg=colour7

# pane number display
set-option -g display-panes-active-colour colour12
set-option -g display-panes-colour colour1
# clock
set-window-option -g clock-mode-colour blue

set -g status-interval 1
set -g status-justify centre # center align window list
set -g status-left-length 40
set -g status-right-length 40
set -g status-left '#[fg=green]#H #[fg=black]• #[fg=magenta,bright]#(uname -r | cut -c 1-5) #[default]#[fg=black]•#[fg=cyan]#(acpi | cut -d ',' -f 2) #[fg=black]• #[fg=blue,bold]###S #[default]'
set -g status-right '#[fg=red,bg=default]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[default]#[fg=black]• #[fg=white,bold,bg=default]%a #[default]#[fg=black]• #[default]%l:%M:%S %p #[default]#[fg=black]• #[default]#[fg=blue]%Y-%m-%d'

#~~~~~~~~~
# vi-mode
#~~~~~~~~~
setw -g mode-keys vi
set-option -gw xterm-keys on
set-window-option -g xterm-keys on # for vim
set-window-option -g mode-keys vi # vi key
bind -r Escape copy-mode			# enter copy mode; default [
bind -T copy-mode-vi a send-keys -X cancel
bind -r p paste-buffer				# paste; (default hotkey: ] )
bind P choose-buffer 			# tmux clipboard history
bind + delete-buffer \; display-message "Deleted current Tmux Clipboard History"

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi V send-keys -X select-line
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind -T choice-mode-vi h send-keys -X tree-collapse
bind -T choice-mode-vi l send-keys -X tree-expand
bind -T choice-mode-vi H send-keys -X tree-collapse-all
bind -T choice-mode-vi L send-keys -X tree-expand-all
bind -T copy-mode-vi y send-keys -X copy-pipe "xclip -in -selection clipboard"

#~~~~~~~~~~~
# shortcuts
#~~~~~~~~~~~
# set window split
bind v split-window -h
bind b split-window

# select pane
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# resize
bind -r C-h resize-pane -L
bind -r C-j resize-pane -D
bind -r C-k resize-pane -U
bind -r C-l resize-pane -R

bind C command-prompt -p "Name of new window: " "new-window -n '%%'"
bind A command-prompt "rename-window %%"

bind x kill-pane
bind & kill-window

# tab
bind j prev
bind k next
bind p swap-window -t -1
bind n swap-window -t +1

bind -n M-- select-layout "even-vertical"
bind -n M-| select-layout "even-horizontal"
bind -n M-r rotate-window

bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."
